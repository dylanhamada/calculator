{"version":3,"sources":["js/redux/reducers.js","js/redux/store.js","js/react/components/Equals.js","js/react/components/Numbers.js","js/redux/actions.js","js/react/components/Operators.js","js/react/components/Decimal.js","js/react/components/Clear.js","js/react/components/Delete.js","js/react/components/Display.js","js/react/components/App.js","serviceWorker.js","index.js"],"names":["defaultState","currentNum","expressionArr","newReducer","reduceReducers","state","arguments","length","undefined","action","num","type","Object","assign","concat","toConsumableArray","includes","join","expArr","console","log","store","createStore","numReducer","Equals","react_default","a","createElement","id","React","Component","Numbers","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","addNum","val","onClick","numval","connect","Operator","addToExpArr","text","Decimal","addDec","Clear","Delete","Display","fullDisplay","display","truncDisplay","slice","numBtnVals","opBtnVals","func","App","numBtns","map","numBtn","components_Numbers","key","opBtns","opBtn","ind","Operators","components_Display","components_Decimal","components_Equals","components_Clear","components_Delete","Boolean","window","location","hostname","match","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.259e9ef3.chunk.js","sourcesContent":["import reduceReducers from \"reduce-reducers\";\nimport { combineReducers } from \"redux\";\n\nlet defaultState = {\n  currentNum: [0],\n  expressionArr: []\n};\n\nconst numReducer = (state = defaultState, action) => {\n  let num = state.currentNum;\n\n  switch (action.type) {\n    /* Updates store value/expression with user-input number */\n    case \"ADD_NUM\":\n      /* Replaces initial '0' with user-input number */\n      if (num.length === 1 && num[0] === 0) {\n        /* If first user-input number is '0', no action */\n        if (action.num === 0) {\n        }\n        num = [];\n      }\n\n      return Object.assign({}, state, {\n        currentNum: [...num, action.num]\n      });\n    /* Updates store value/expression with a decimal */\n    case \"ADD_DEC\":\n      if (!num.includes(\".\")) {\n        return Object.assign({}, state, {\n          currentNum: [...num, \".\"]\n        });\n      }\n    default:\n      return state;\n  }\n};\n\nconst expArrReducer = (state = defaultState, action) => {\n  let num = state.currentNum.join(\"\");\n  let expArr = state.expressionArr;\n\n  /* Updates store by pushing current number into expressions array,\n  then clearing the current number */\n  switch (action.type) {\n    case \"ADD_EXP_ARR\":\n      console.log(state);\n      return Object.assign({}, state, {\n        expressionArr: [...expArr, num],\n        currentNum: [0]\n      });\n    default:\n      return state;\n  }\n};\n\n// const opReducer = (state = defaultState, action) => {\n//   switch(action.type {\n//     case \"ADD_OP\":\n\n//       switch(action.operator) {\n\n//       }\n//   })\n// };\n\n// const rootReducer = combineReducers({\n//   num: numReducer,\n//   expArr: expArrReducer\n// });\n\nconst newReducer = reduceReducers(numReducer, expArrReducer);\n\nexport default newReducer;\n","import { createStore } from \"redux\";\nimport numReducer from \"./reducers\";\n\nconst store = createStore(numReducer);\n\nexport default store;\n","import React from \"react\";\nimport \"../../../css/App.css\";\n\nclass Equals extends React.Component {\n  render() {\n    return (\n      <div id=\"equals\">\n        <span>=</span>\n      </div>\n    );\n  }\n}\n\nexport default Equals;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNum } from \"../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Numbers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.addNum(this.props.val);\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.id}\n        onClick={this.handleClick}\n        numval={this.props.val}\n      >\n        <span>{this.props.val}</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addNum }\n)(Numbers);\n","/* Updates store with user-input number */\nexport const addNum = num => {\n  return {\n    type: \"ADD_NUM\",\n    num: num\n  };\n};\n\n/* Updates store with decimal */\nexport const addDec = () => {\n  return {\n    type: \"ADD_DEC\"\n  };\n};\n\n/* Updates store with previous number */\nexport const addToExpArr = () => {\n  return {\n    type: \"ADD_EXP_ARR\"\n  };\n};\n\n/* Updates store with operator type */\nexport const addOp = operator => {\n  return {\n    type: \"ADD_OP\",\n    operator: operator\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToExpArr } from \"../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Operator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.addToExpArr();\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} onClick={this.handleClick}>\n        {this.props.text}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addToExpArr }\n)(Operator);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addDec } from \"../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Decimal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.addDec();\n  }\n\n  render() {\n    return (\n      <div id=\"decimal\" onClick={this.handleClick}>\n        <span>.</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addDec }\n)(Decimal);\n","import React from \"react\";\nimport \"../../../css/App.css\";\n\nclass Clear extends React.Component {\n  render() {\n    return (\n      <div id=\"clear\">\n        <span>Clear</span>\n      </div>\n    );\n  }\n}\n\nexport default Clear;\n","import React from \"react\";\nimport \"../../../css/App.css\";\n\nclass Delete extends React.Component {\n  render() {\n    return (\n      <div id=\"delete\">\n        <span>Delete</span>\n      </div>\n    );\n  }\n}\n\nexport default Delete;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../../css/App.css\";\n\nconst mapStateToProps = state => {\n  return {\n    display: state.currentNum\n  };\n};\n\nclass Display extends React.Component {\n  render() {\n    /* Truncates value or expression displayed if too long */\n    let fullDisplay = this.props.display.join(\"\");\n    let truncDisplay =\n      fullDisplay.length > 27\n        ? fullDisplay.slice(fullDisplay.length - 27, fullDisplay.length - 1)\n        : fullDisplay;\n\n    return (\n      <div id=\"display\">\n        <span>{truncDisplay}</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Display);\n","import React from \"react\";\nimport Equals from \"./Equals.js\";\nimport Numbers from \"./Numbers.js\";\nimport Operators from \"./Operators.js\";\nimport Decimal from \"./Decimal.js\";\nimport Clear from \"./Clear.js\";\nimport Delete from \"./Delete.js\";\nimport Display from \"./Display.js\";\nimport \"../../../css/App.css\";\n\n/* Array containing values for the Numbers components */\nconst numBtnVals = [\n  { num: 0, text: \"zero\" },\n  { num: 1, text: \"one\" },\n  { num: 2, text: \"two\" },\n  { num: 3, text: \"three\" },\n  { num: 4, text: \"four\" },\n  { num: 5, text: \"five\" },\n  { num: 6, text: \"six\" },\n  { num: 7, text: \"seven\" },\n  { num: 8, text: \"eight\" },\n  { num: 9, text: \"nine\" }\n];\n\n/* Array containing values for the Operators components */\nconst opBtnVals = [\n  { func: \"add\", text: \"+\" },\n  { func: \"subtract\", text: \"-\" },\n  { func: \"multiply\", text: \"×\" },\n  { func: \"divide\", text: \"÷\" }\n];\n\nclass App extends React.Component {\n  render() {\n    /* Map the numBtnVals array to generate Numbers components for\n    each array element */\n    const numBtns = numBtnVals.map(numBtn => {\n      return <Numbers key={numBtn.num} id={numBtn.text} val={numBtn.num} />;\n    });\n\n    /* Map the opBtnVals array to generate Operators components for\n    each array element */\n    const opBtns = opBtnVals.map((opBtn, ind) => {\n      return <Operators key={ind} id={opBtn.func} text={opBtn.text} />;\n    });\n\n    return (\n      <div id=\"app\">\n        <Display />\n        {numBtns}\n        {opBtns}\n        <Decimal />\n        <Equals />\n        <Clear />\n        <Delete />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./js/redux/store\";\n\nimport App from \"./js/react/components/App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}