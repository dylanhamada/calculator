{"version":3,"sources":["Equals.js","Numbers.js","Operators.js","Decimal.js","Clear.js","Delete.js","Display.js","App.js","serviceWorker.js","index.js"],"names":["Equals","react_default","a","createElement","id","React","Component","Numbers","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","num","Operator","text","Decimal","Clear","Delete","Display","numBtnVals","opBtnVals","func","App","numBtns","map","numBtn","src_Numbers","key","opBtns","opBtn","ind","Operators","src_Display","src_Decimal","src_Equals","src_Clear","src_Delete","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fa516e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Equals extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"equals\">\r\n        <span>=</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Equals;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Numbers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>{this.props.num}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Operator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.props.text}</div>;\r\n  }\r\n}\r\n\r\nexport default Operator;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Decimal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"decimal\">\r\n        <span>.</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Decimal;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Clear extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"clear\">\r\n        <span>Clear</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clear;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Delete extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"delete\">\r\n        <span>Delete</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Delete;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"display\">\r\n        <span>Display</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\nimport Equals from \"./Equals.js\";\nimport Numbers from \"./Numbers.js\";\nimport Operators from \"./Operators.js\";\nimport Decimal from \"./Decimal.js\";\nimport Clear from \"./Clear.js\";\nimport Delete from \"./Delete.js\";\nimport Display from \"./Display.js\";\nimport \"./App.css\";\n\n/* Array containing values for the Numbers components */\nconst numBtnVals = [\n  { num: 0, text: \"zero\" },\n  { num: 1, text: \"one\" },\n  { num: 2, text: \"two\" },\n  { num: 3, text: \"three\" },\n  { num: 4, text: \"four\" },\n  { num: 5, text: \"five\" },\n  { num: 6, text: \"six\" },\n  { num: 7, text: \"seven\" },\n  { num: 8, text: \"eight\" },\n  { num: 9, text: \"nine\" }\n];\n\n/* Array containing values for the Operators components */\nconst opBtnVals = [\n  { func: \"add\", text: \"+\" },\n  { func: \"subtract\", text: \"-\" },\n  { func: \"multiply\", text: \"ร\" },\n  { func: \"divide\", text: \"รท\" }\n];\n\nclass App extends React.Component {\n  render() {\n    /* Map the numBtnVals array to generate Numbers components for\n    each array element */\n    const numBtns = numBtnVals.map(numBtn => {\n      return <Numbers key={numBtn.num} id={numBtn.text} num={numBtn.num} />;\n    });\n\n    /* Map the opBtnVals array to generate Operators components for\n    each array element */\n    const opBtns = opBtnVals.map((opBtn, ind) => {\n      return <Operators key={ind} id={opBtn.func} text={opBtn.text} />;\n    });\n\n    return (\n      <div id=\"app\">\n        <Display />\n        {numBtns}\n        {opBtns}\n        <Decimal />\n        <Equals />\n        <Clear />\n        <Delete />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}