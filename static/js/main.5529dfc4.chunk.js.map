{"version":3,"sources":["js/redux/reducers/numReducer.js","js/redux/reducers/expArrReducer.js","js/redux/reducers/delReducer.js","js/redux/reducers/rootReducer.js","js/redux/store.js","js/react/components/Equals.js","js/react/components/Numbers.js","js/redux/actions.js","js/react/components/Operators.js","js/react/components/Decimal.js","js/react/components/Clear.js","js/react/components/Delete.js","js/react/components/Display.js","js/react/components/DisplayExp.js","js/react/components/App.js","serviceWorker.js","index.js"],"names":["numReducer","state","arguments","length","undefined","defaultState","action","num","currentNum","exp","expressionArr","type","Object","assign","concat","toConsumableArray","includes","expArrReducer","func","expArr","delReducer","pop","rootReducer","reduceReducers","store","createStore","Equals","react_default","a","createElement","id","React","Component","Numbers","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","addNum","val","onClick","numval","connect","Operator","addToExpArr","text","Decimal","addDec","Clear","Delete","delVal","Display","fullDisplay","display","join","truncDisplay","slice","DisplayExp","numBtnVals","opBtnVals","App","numBtns","map","numBtn","components_Numbers","key","opBtns","opBtn","ind","Operators","components_DisplayExp","components_Display","components_Decimal","components_Equals","components_Clear","components_Delete","Boolean","window","location","hostname","match","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5529dfc4.chunk.js","sourcesContent":["import { defaultState } from \"./rootReducer\";\r\n\r\n/* Updates store value/expression with user-input number */\r\nconst numReducer = (state = defaultState, action) => {\r\n  let num = state.currentNum;\r\n  let exp = state.expressionArr;\r\n\r\n  switch (action.type) {\r\n    case \"ADD_NUM\":\r\n      /* Replaces initial '0' with user-input number */\r\n      if (num.length === 1 && num[0] === 0) {\r\n        /* If first user-input number is '0', no action */\r\n        if (action.num === 0) {\r\n        }\r\n        num = [];\r\n      }\r\n\r\n      /* Adds user-input number to currentNum and expressionArr, providing\r\n      a value for Display and DisplayExp components to display  */\r\n      return typeof num[0] === \"string\"\r\n        ? Object.assign({}, state, {\r\n            currentNum: [action.num],\r\n            expressionArr: [...exp, action.num]\r\n          })\r\n        : Object.assign({}, state, {\r\n            currentNum: [...num, action.num],\r\n            expressionArr: [...exp, action.num]\r\n          });\r\n    /* Updates store value/expression with a decimal */\r\n    case \"ADD_DEC\":\r\n      if (!num.includes(\".\")) {\r\n        /* If decimal comes after an operator, currentNum is cleared\r\n        and expressionArr includes a zero before the decimal */\r\n        if (typeof num[0] === \"string\") {\r\n          return Object.assign({}, state, {\r\n            currentNum: [0, \".\"],\r\n            expressionArr: [...exp, 0, \".\"]\r\n          });\r\n        } else {\r\n          return Object.assign({}, state, {\r\n            currentNum: [...num, \".\"],\r\n            expressionArr: [...exp, \".\"]\r\n          });\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default numReducer;\r\n","import { defaultState } from \"./rootReducer\";\r\n\r\n/* Updates store by pushing current number into expressions array,\r\n  then clearing the current number */\r\nconst expArrReducer = (state = defaultState, action) => {\r\n  let func = action.func;\r\n  let expArr = state.expressionArr;\r\n\r\n  switch (action.type) {\r\n    case \"ADD_EXP_ARR\":\r\n      return Object.assign({}, state, {\r\n        expressionArr: [...expArr, func],\r\n        currentNum: [func]\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default expArrReducer;\r\n","import { defaultState } from \"./rootReducer\";\r\n\r\nconst delReducer = (state = defaultState, action) => {\r\n  let num = [...state.currentNum];\r\n  let exp = [...state.expressionArr];\r\n\r\n  switch (action.type) {\r\n    case \"DEL_VAL\":\r\n      num.pop();\r\n      exp.pop();\r\n      return Object.assign({}, state, {\r\n        currentNum: num,\r\n        expressionArr: exp\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default delReducer;\r\n","import reduceReducers from \"reduce-reducers\";\n\nimport numReducer from \"./numReducer\";\nimport expArrReducer from \"./expArrReducer\";\nimport delReducer from \"./delReducer\";\n\nexport let defaultState = {\n  currentNum: [0],\n  expressionArr: []\n};\n\n/* Connects reducers to a flat store/state */\nconst rootReducer = reduceReducers(numReducer, expArrReducer, delReducer);\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport \"../../../css/App.css\";\n\nclass Equals extends React.Component {\n  render() {\n    return (\n      <div id=\"equals\">\n        <span>=</span>\n      </div>\n    );\n  }\n}\n\nexport default Equals;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNum } from \"../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Numbers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.addNum(this.props.val);\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.id}\n        onClick={this.handleClick}\n        numval={this.props.val}\n      >\n        <span>{this.props.val}</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addNum }\n)(Numbers);\n","/* Updates store with user-input number */\nexport const addNum = num => {\n  return {\n    type: \"ADD_NUM\",\n    num: num\n  };\n};\n\n/* Updates store with decimal */\nexport const addDec = () => {\n  return {\n    type: \"ADD_DEC\"\n  };\n};\n\n/* Updates store with previous number */\nexport const addToExpArr = func => {\n  return {\n    type: \"ADD_EXP_ARR\",\n    func: func\n  };\n};\n\n/* Updates store with operator type */\nexport const addOp = operator => {\n  return {\n    type: \"ADD_OP\",\n    operator: operator\n  };\n};\n\n/* Deletes most recent user-input from store */\nexport const delVal = () => {\n  return {\n    type: \"DEL_VAL\"\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToExpArr } from \"../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Operator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.addToExpArr(this.props.text);\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} onClick={this.handleClick}>\n        {this.props.text}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addToExpArr }\n)(Operator);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addDec } from \"../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Decimal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.addDec();\n  }\n\n  render() {\n    return (\n      <div id=\"decimal\" onClick={this.handleClick}>\n        <span>.</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addDec }\n)(Decimal);\n","import React from \"react\";\nimport \"../../../css/App.css\";\n\nclass Clear extends React.Component {\n  render() {\n    return (\n      <div id=\"clear\">\n        <span>Clear</span>\n      </div>\n    );\n  }\n}\n\nexport default Clear;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { delVal } from \"./../../redux/actions\";\nimport \"../../../css/App.css\";\n\nclass Delete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.delVal();\n  }\n\n  render() {\n    return (\n      <div id=\"delete\" onClick={this.handleClick}>\n        <span>Delete</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { delVal }\n)(Delete);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../../css/App.css\";\n\nconst mapStateToProps = state => {\n  return {\n    display: state.currentNum\n  };\n};\n\nclass Display extends React.Component {\n  render() {\n    /* Truncates value or expression displayed if too long */\n    let fullDisplay = this.props.display.join(\"\");\n    let truncDisplay =\n      fullDisplay.length > 27\n        ? fullDisplay.slice(fullDisplay.length - 27, fullDisplay.length - 1)\n        : fullDisplay;\n\n    return (\n      <div id=\"display\">\n        <span>{truncDisplay}</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Display);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../../css/App.css\";\n\nconst mapStateToProps = state => {\n  return {\n    display: state.expressionArr\n  };\n};\n\nclass DisplayExp extends React.Component {\n  render() {\n    /* Truncates value or expression displayed if too long */\n    let fullDisplay = this.props.display.join(\"\");\n    let truncDisplay =\n      fullDisplay.length > 27\n        ? fullDisplay.slice(fullDisplay.length - 27, fullDisplay.length - 1)\n        : fullDisplay;\n\n    return (\n      <div id=\"displayExp\">\n        <span>{truncDisplay}</span>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(DisplayExp);\n","import React from \"react\";\nimport Equals from \"./Equals.js\";\nimport Numbers from \"./Numbers.js\";\nimport Operators from \"./Operators.js\";\nimport Decimal from \"./Decimal.js\";\nimport Clear from \"./Clear.js\";\nimport Delete from \"./Delete.js\";\nimport Display from \"./Display.js\";\nimport DisplayExp from \"./DisplayExp.js\";\nimport \"../../../css/App.css\";\n\n/* Array containing values for the Numbers components */\nconst numBtnVals = [\n  { num: 0, text: \"zero\" },\n  { num: 1, text: \"one\" },\n  { num: 2, text: \"two\" },\n  { num: 3, text: \"three\" },\n  { num: 4, text: \"four\" },\n  { num: 5, text: \"five\" },\n  { num: 6, text: \"six\" },\n  { num: 7, text: \"seven\" },\n  { num: 8, text: \"eight\" },\n  { num: 9, text: \"nine\" }\n];\n\n/* Array containing values for the Operators components */\nconst opBtnVals = [\n  { func: \"add\", text: \"+\" },\n  { func: \"subtract\", text: \"-\" },\n  { func: \"multiply\", text: \"×\" },\n  { func: \"divide\", text: \"÷\" }\n];\n\nclass App extends React.Component {\n  render() {\n    /* Map the numBtnVals array to generate Numbers components for\n    each array element */\n    const numBtns = numBtnVals.map(numBtn => {\n      return <Numbers key={numBtn.num} id={numBtn.text} val={numBtn.num} />;\n    });\n\n    /* Map the opBtnVals array to generate Operators components for\n    each array element */\n    const opBtns = opBtnVals.map((opBtn, ind) => {\n      return <Operators key={ind} id={opBtn.func} text={opBtn.text} />;\n    });\n\n    return (\n      <div id=\"app\">\n        <DisplayExp />\n        <Display />\n        {numBtns}\n        {opBtns}\n        <Decimal />\n        <Equals />\n        <Clear />\n        <Delete />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./js/redux/store\";\n\nimport App from \"./js/react/components/App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}